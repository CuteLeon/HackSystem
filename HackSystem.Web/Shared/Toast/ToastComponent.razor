@inject IJSRuntime jsRuntime
@inject ILogger<ToastComponent> logger

<div id="@this.ToastDetail.Id" @key="@this.ToastDetail.Id" data-containerid="@this.ToastDetail.ContainerId" class="toast" role="alert" aria-live="assertive" aria-atomic="true" style="pointer-events:auto;">
    <div class="toast-header">
        @switch (this.ToastDetail.Icon)
        {
            case Icons.Information:
                <span class="fas fa-info-circle text-success mr-2" style="font-size:20px;"></span>
                break;
            case Icons.Question:
                <span class="fas fa-question-circle text-primary mr-2" style="font-size:20px;"></span>
                break;
            case Icons.Warning:
                <span class="fas fa-exclamation-circle text-warning mr-2" style="font-size:20px;"></span>
                break;
            case Icons.Error:
                <span class="fas fa-times-circle text-danger mr-2" style="font-size:20px;"></span>
                break;
            default:
            case Icons.HackSystem:
                <img src="/LogoImageSmall.png" class="rounded mr-2" />
                break;
        }
        <strong class="mr-auto">@this.ToastDetail.Title</strong>
        <small class="text-muted">@this.ToastDetail.CreateTime.ToLongTimeString()</small>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        @this.ToastDetail.Message
    </div>
</div>

@code{
    [Parameter]
    public ToastDetail ToastDetail { get; set; }
}