@page "/Desktop"
@attribute [Authorize(Roles = CommonSense.Roles.HackerRole)]
@inject IConfiguration Configuration
@inject IJSRuntime JSRuntime
@inject IAuthenticationService AuthenticationService
@inject AuthenticationStateProvider provider

<h3>Desktop</h3>
<button class="btn btn-success" @onclick="GetAccountInfo">获取用户信息</button>
<p>@accountInfo</p>
<h1>@provider.GetHashCode().ToString("X") Counter= @((provider as HackSystemAuthenticationStateProvider).Counter)</h1>

<AuthorizeView Policy=@WebCommonSense.AuthorizationPolicy.LeonPolicy>
    <h4><span class="badge badge-primary">Leon</span></h4>
</AuthorizeView>

<AuthorizeView Policy=@WebCommonSense.AuthorizationPolicy.ProfessionalHackerPolicy>
    <a class="h4" href="/ProfessionalHackerPage"><span class="badge badge-warning">Professional</span></a>
</AuthorizeView>

<AuthorizeView Policy=@WebCommonSense.AuthorizationPolicy.HackerPolicy>
    <h4><span class="badge badge-dark">Hack</span></h4>
</AuthorizeView>

<a class="btn btn-primary" href="/SystemSettings">系统设置</a>
<h1>Configuration example</h1>
<p>Configuration: @Configuration["APIURL"]</p>

@code {
    string accountInfo = "账户信息";

    private async Task GetAccountInfo()
    {
        (provider as HackSystemAuthenticationStateProvider).Counter++;
        accountInfo = await this.AuthenticationService.GetAccountInfo();
    }
}