@inherits LayoutComponentBase
@inject ILogger<DesktopLayout> logger

<div id="DesktopLayoutInstance" class="container-fluid p-0 position-absolute overflow-hidden" style="height: 100%; width: 100%; background-image: url(images/DesktopBackground.jpg); background-size: cover; background-position-y:center; background-position-x: center;">
    <ToastContainerComponent Top="2" @ref="ToastContainer" />
    <CascadingValue IsFixed="true" Name="DesktopToastContainer" Value=@GetDesktopToastContainer>
        @Body
    </CascadingValue>
</div>

@code{
    private Func<IToastContainer> GetDesktopToastContainer { get; set; }
    private ToastContainerComponent ToastContainer { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        /* @ref instruction will be executed after compent rendered, so ToastContainer parameter will be null when transform to Cascading parameter.
         * A flexible solution is that make the reference to be lazy, create a delegate to get Cascading parameter.
         * I raise an Issue on GitHub and My solution was remommended as a better way.
         * Visit at: https://github.com/dotnet/aspnetcore/issues/25640
         */
        this.GetDesktopToastContainer = new Func<IToastContainer>(() => this.ToastContainer);
    }
}
