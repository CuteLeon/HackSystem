<nav class="navbar navbar-expand p-0 navbar-dark">
    <div class="navbar-brand p-0 ml-2">
        @* TODO: Leon: 这里优先显示激活程序的图标和名称 *@
        <img class="img-fluid" src="/LogoImageSmall.png" />
        <span>Hack System</span>
    </div>

    @* TODO: Leon: 菜单项支持 Icon *@
    @* TODO: Leon: 按钮菜单项 *@
    @* TODO: Leon: 复选框菜单项 *@
    @* TODO: Leon: 单选框菜单项 *@
    @* TODO: Leon: 分割线菜单项 *@
    @* TODO: Leon: 子菜单菜单项 *@
    @* TODO: Leon: 菜单项点击事件，附带参数 MenuIdentity *@

    <ul class="navbar-nav text-nowrap">
        @if (this.DesktopMenuContext?.MenuItems?.Any() ?? false)
        {
            foreach (var menuItem in this.DesktopMenuContext.MenuItems)
            {
                <li>@menuItem.Title</li>
                if (menuItem.SubMenuItems != null)
                {
                    <MenuItemSubMenuComponent MenuItem="menuItem"></MenuItemSubMenuComponent>
                }
                else
                {
                    switch (menuItem.MenuType)
                    {
                        case MenuItem.MenuTypes.Button:
                            {
                                <MenuItemButtonComponent MenuItem="menuItem"></MenuItemButtonComponent>
                                break;
                            }
                        case MenuItem.MenuTypes.CheckBox:
                            {
                                <MenuItemCheckBoxComponent MenuItem="menuItem"></MenuItemCheckBoxComponent>
                                break;
                            }
                        case MenuItem.MenuTypes.Radio:
                            {
                                <MenuItemRadioComponent MenuItem="menuItem"></MenuItemRadioComponent>
                                break;
                            }
                        default: break;
                    }
                }
            }
        }
    </ul>
</nav>

@code{
    [CascadingParameter]
    private Func<IToastContainer> GetToastContainer { get; set; }

    [CascadingParameter(Name = "DesktopMenuContext")]
    protected IMenuContext DesktopMenuContext { get; set; }
}