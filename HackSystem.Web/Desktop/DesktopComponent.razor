@page "/Desktop"
@layout DesktopLayout
@attribute [Authorize(Roles = CommonSense.Roles.HackerRole)]

@inject ILogger<DesktopComponent> logger
@inject IMapper mapper
@inject IProgramDetailService programDetailService

<div id="DesktopInstance" class="container-fluid w-100 h-100">
    <TopBarView @ref="TopBarView">
        <ProgramMenuView>
            <DesktopMenuComponent OnTest="this.OnTest"></DesktopMenuComponent>
        </ProgramMenuView>
        <ProgramStatusView>
            <DesktopStatusComponent></DesktopStatusComponent>
        </ProgramStatusView>
    </TopBarView>

    <div id="topBar" class="fixed-top">
        <CascadingValue IsFixed="false" Name="DesktopTopBarView" Value=@this.TopBarView>
            <TopBarComponent />
        </CascadingValue>
    </div>

    <div id="programDrawer" class="w-100 h-100" style="padding-top:30px;">
        <ProgramDrawerComponent @ref="@ProgramDrawerComponent" />
    </div>

    <div id="infoPanel" class="position-fixed w-100 h-100" style="left:0px;top:0px;padding-top:30px;pointer-events:none;">
        <InfoPanelContainerComponent></InfoPanelContainerComponent>
    </div>

    <div id="programDock" class="position-fixed w-100 d-none d-md-flex justify-content-center" style="bottom:45px; pointer-events:none;">
        <ProgramDockComponent @ref="@ProgramDockComponent" />
    </div>

    <div id="programContainer" class="position-fixed w-100 h-100" style="left: 0px; top: 0px;pointer-events:none;">
        <ProgramContainerComponent></ProgramContainerComponent>
    </div>

    <ToastContainerComponent Top="2" @ref="ToastContainer" />
</div>

@code {
    protected Dictionary<string, UserProgramMap> UserProgramMaps { get; set; } = new();

    protected ProgramDockComponent ProgramDockComponent { get; set; }
    protected ProgramDrawerComponent ProgramDrawerComponent { get; set; }
    protected TopBarView TopBarView { get; set; }
    protected ToastContainerComponent ToastContainer { get; set; }
}
