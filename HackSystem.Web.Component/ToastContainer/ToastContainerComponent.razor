@inject ILogger<ToastContainerComponent> logger
@inject IJSRuntime jsRuntime

<div class="position-fixed overflow-hidden" style="top:@(top)rem; bottom:@(bottom)rem; right:0; width:380px;pointer-events: none;z-index:@z_Index;">
    <div class="p-3" style="overflow-y:scroll;height:100%; width:405px;">
        @foreach (var toast in this.Toasts.Values.OrderBy(detail => detail.CreateTime).ThenByDescending(detail => detail.Icon))
        {
            <p @key=@toast.Id>
                <ToastComponent @key=@toast.Id ToastDetail="toast" />
            </p>
        }
    </div>
</div>

@code {
    private int z_Index = 512;
    private int top = 0;
    private int bottom = 0;

    [Parameter]
    public int Z_Index { get => this.z_Index; set => this.z_Index = value; }

    [Parameter]
    public int Top { get => this.top; set => this.top = value; }

    [Parameter]
    public int Bottom { get => this.bottom; set => this.bottom = value; }

    private readonly Dictionary<string, ToastDetail> Toasts = new Dictionary<string, ToastDetail>();
}
