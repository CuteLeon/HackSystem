@inject IJSRuntime jsRuntime

<span @onmousedown=@this.OnMouseDown
      @ontouchstart=@this.OnTouchStart
      style="@($"cursor:{this.Cursor??"move"};")">
    @this.ChildContent
</span>

@code {
    [Parameter]
    public DotNetObjectReference<IDraggableComponent> DraggableReference { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string? Cursor { get; set; }

    [Parameter]
    public string DragTargetId { get; set; }

    private IJSObjectReference draggableModuleReference;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.draggableModuleReference = await jsRuntime
            .InvokeAsync<IJSObjectReference>("import", "./_content/HackSystem.Web.ProgramPlatform/blazor.draggable.js");
    }

    private async Task OnMouseDown(MouseEventArgs args)
    {
        if (args.Button != 0) return;
        await this.draggableModuleReference.InvokeVoidAsync(
            "dragStart",
            this.DraggableReference,
            true, args.ClientX, args.ClientY,
            this.DragTargetId);
    }

    private async Task OnTouchStart(TouchEventArgs args)
    {
        await this.draggableModuleReference.InvokeVoidAsync(
            "dragStart",
            this.DraggableReference,
            false, args.Touches[0].ClientX, args.Touches[0].ClientY,
            this.DragTargetId);
    }
}
